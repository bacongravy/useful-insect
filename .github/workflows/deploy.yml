name: deploy

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Set TARGET_URL environment variable
        run: |
          echo "::set-env name=TARGET_URL::https://glitch.com/~$(basename "${GLITCH_GIT_URL}")"
        env:
          GLITCH_GIT_URL: ${{ secrets.GLITCH_GIT_URL }}
        
      - name: Create GitHub deployment
        uses: chrnorm/deployment-action@releases/v1
        id: deployment
        with:
          token: "${{ github.token }}"
          target_url: "${{ env.TARGET_URL }}"
          environment: production

      - name: Add glitcheroo git remote
        run: |
          git remote add glitcheroo ${GLITCH_GIT_URL}
        env:
          GLITCH_GIT_URL: ${{ secrets.GLITCH_GIT_URL }}
        
      - name: Deploy project to Glitch
        run: |
          npx glitcheroo deploy

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target_url: "${{ env.TARGET_URL }}"
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target_url: "${{ env.TARGET_URL }}"
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
